# Review Service konfigürasyonu
# Bu dosya, Config Server'ın bağlı olduğu Git repository'sine eklenmelidir

spring:
  datasource:
    url: jdbc:postgresql://postgres:5432/review_service_db
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    schemas: public

server:
  port: 8085
  servlet:
    context-path: /

eureka:
  client:
    serviceUrl:
      defaultZone: http://discovery-server:8761/eureka
  instance:
    prefer-ip-address: true

# JWT konfigürasyonları - tüm servislerde aynı değerler kullanılmalıdır
avmerkez:
  app:
    jwtSecret: ${JWT_SECRET:changeitChangeitChangeitChangeitChangeitChangeitChangeitChangeitChangeit}
    jwtExpirationMs: ${JWT_EXPIRATION:86400000} # 24 saat
    jwtCookieName: avm_jwt
    jwtRefreshCookieName: avm_refresh_token
    jwtRefreshExpirationMs: ${JWT_REFRESH_EXPIRATION:604800000} # 7 gün
    jwtIssuer: avmerkez-user-service
    jwtAudience: avmerkez-api
    serviceName: review-service

management:
  endpoints:
    web:
      exposure:
        include: "health,info,prometheus"
  endpoint:
    health:
      show-details: when_authorized

logging:
  level:
    root: INFO
    com.avmerkez: INFO
    org.springframework.web: INFO
    org.hibernate.SQL: INFO

# Docker profili
---
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:postgresql://postgres:5432/review_service_db

eureka:
  client:
    serviceUrl:
      defaultZone: http://discovery-server:8761/eureka
  instance:
    preferIpAddress: true

# Production profili
---
spring:
  config:
    activate:
      on-profile: prod
  jpa:
    show-sql: false
    properties:
      hibernate:
        format_sql: false
  datasource:
    url: jdbc:postgresql://${DB_HOST:postgres}:${DB_PORT:5432}/${DB_NAME:review_service_db}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

eureka:
  instance:
    secure-port-enabled: true
    non-secure-port-enabled: false

logging:
  level:
    root: WARN
    com.avmerkez: INFO
    org.springframework: WARN
    org.hibernate: WARN

management:
  endpoints:
    web:
      exposure:
        include: "health,info,prometheus"
  endpoint:
    health:
      show-details: when-authorized 
