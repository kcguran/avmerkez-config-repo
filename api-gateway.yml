# API Gateway specific configurations

server:
  port: 8080 # Gateway port
  
avmerkez:
      app:
        jwtSecret: ${JWT_SECRET:c2VjcmV0IGtleSBtdXN0IGJlIGxvbmcgdGhhbiAyNTYgYml0cw==} # user-service ile aynı olmalı

spring:
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      # Route definitions
      routes:
        - id: mall_service_route
          uri: lb://mall-service
          predicates:
            - Path=/api/v1/malls/**
          filters:
            - RewritePath=/api/v1/(?<segment>.*), /${segment}
            - StripPrefix=2
        - id: store_service_route_by_id
          uri: lb://store-service # store-service'in Eureka ID'si
          predicates:
            - Path=/api/v1/stores/{id} # Mağazaları ID ile getirme/güncelleme/silme
          filters:
            - RewritePath=/api/v1/(?<segment>.*), /${segment}
        - id: store_service_route_list
          uri: lb://store-service
          predicates:
            - Path=/api/v1/stores # Tüm mağazaları veya AVM ID ile filtrelenmişleri listeleme
            - Query=mallId # mallId query parametresi varsa veya yoksa bu route'a girer
          filters:
            - RewritePath=/api/v1/(?<segment>.*), /${segment}
        - id: store_service_route_by_mall # /api/v1/malls/{mallId}/stores gibi
          uri: lb://store-service
          predicates:
            - Path=/api/v1/malls/{mallId}/stores
          filters:
            # Rewrite to /stores?mallId={mallId}
            - RewritePath=/api/v1/malls/(?<mallId>.*)/stores, /stores?mallId=${mallId}
        - id: store-service-stores # Mağazaları listeleyen veya yeni mağaza ekleyen endpoint (/stores)
          uri: lb://STORE-SERVICE # store-service'in Eureka'daki adı
          predicates:
            - Path=/api/v1/stores/** # Bu path ile başlayan istekleri yakala
          filters:
            - RewritePath=/api/v1/(?<segment>.*), /$\{segment} # /api/v1 kısmını kaldırıp store-service'e ilet
        - id: store-service-mall-stores # Bir AVM'ye ait mağazaları listeleyen endpoint (/malls/{mallId}/stores)
          uri: lb://STORE-SERVICE
          predicates:
            - Path=/api/v1/malls/{mallId}/stores/** # Bu path ile başlayan istekleri yakala
          filters:
            # Path'i store-service'in anlayacağı formata çevir: /malls/{mallId}/stores -> /malls/{mallId}/stores
            # Bu durumda RewritePath'e gerek yok gibi görünüyor, ancak Gateway'in base path'i varsa veya
            # store-service farklı bir path bekliyorsa ayarlama gerekebilir. Şimdilik basit tutalım.
            # Eğer store-service /malls/{mallId}/stores şeklinde bekliyorsa RewritePath gerekmez.
            # Eğer store-service sadece /stores?mallId={mallId} gibi bekliyorsa farklı bir filter gerekir.
            # Mevcut StoreController /malls/{mallId}/stores şeklinde bekliyor, bu yüzden rewrite şimdilik gereksiz.
            - RewritePath=/api/v1/malls/(?<mallId>.*)/stores/(?<segment>.*), /malls/$\{mallId}/stores/$\{segment}
            # Alternatif olarak store-service'in beklentisine göre:
            # - RewritePath=/api/v1/malls/(?<mallId>.*)/stores(?<remaining>/?.*), /stores?mallId=$\\{mallId}\\{remaining}


      # Optional: Default filters applied to all routes
      # default-filters:
      #   - name: Retry
      #     args:
      #       retries: 3
      #       statuses: BAD_GATEWAY

# Expose gateway specific actuator endpoints
management:
  endpoints:
    web:
      exposure:
        include: health, info, gateway, prometheus, metrics 
