# =========================
# api-gateway Özel Ayarları
# =========================

server:
  port: ${SERVER_PORT:8080} # API Gateway portu

spring:
  application:
    name: api-gateway
  redis:
    host: localhost
    port: 6379
  cloud:
    gateway:
      routes:
        - id: search-service
          uri: lb://search-service
          predicates:
            - Path=/api/v1/search/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1
      default-filters:
        - name: RequestRateLimiter
          args:
            redis-rate-limiter.replenishRate: 5
            redis-rate-limiter.burstCapacity: 10
            redis-rate-limiter.requestedTokens: 1
  cloud:
    gateway:
      # Servis Keşfi ile Otomatik Rota Tanımlama (Discovery Locator)
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        - id: user_service_route_login
          uri: lb://USER-SERVICE # Eureka'daki USER-SERVICE'e yönlendir
          predicates:
            - Path=/api/v1/auth/login # Sadece login isteği için özel rota
        - id: user_service_route_register
          uri: lb://USER-SERVICE
          predicates:
            - Path=/api/v1/auth/register
management:
  endpoints:
    web:
      exposure:
        include: health, info, prometheus, metrics, gateway, configprops, loggers
  endpoint:
    gateway:
      enabled: true

# Loglama
logging:
  level:
    com.avmerkez.apigateway: DEBUG # API Gateway kendi logları
    org.springframework.cloud.gateway: INFO # Gateway'in iç işleyişi için log seviyesi
    reactor.netty.http.client: INFO # Http client logları (DEBUG çok detaylı olabilir)
